import java.util.Scanner;

class TicTacGame {
    public static void main(String[] args) {
        char[][] board = new char[3][3];
        //Using for-loop for displaying the (3X3)Board.
        for (int row = 0; row < board.length; row++) {
            for (int col = 0; col < board.length; col++) {
                board[row][col] = ' ';
            }
        }
        char player = 'O';        //Initializing the player
        boolean gameOver = false;
        Scanner scanner = new Scanner(System.in); //Using Scanner class to take input from the player.

        while (!gameOver) {
            displayBoard(board);//Updating and displaying the board using the displayBoard method.
            System.out.print("Player " + player + " enter row input from(0-2):");
            int row = scanner.nextInt();
            System.out.print("Player " + player + " enter column input from(0-2):");
            int col = scanner.nextInt();
            System.out.println();

            if (board[row][col] == ' ') {
                board[row][col] = player; // placing the element.
                gameOver = winningPossibilities(board, player);
                if (gameOver) {
                    System.out.println("Player " + player + " has won: ");
                } else if (!winningPossibilities(board, player) && boardFull(board)) {
                    System.out.println("Game draw!");
                    {
                        break;
                    }
                } else {
                  player =(player=='X')?'O':'X';//Using ternary operator.
                }
            } else {
                System.out.println("Invalid move. Try again!");
            }
        }
        displayBoard(board);//Displaying the board after winning the game.
    }


    //Using winningPossibilities function to check all possibilities of winning the game.
    public static boolean winningPossibilities(char[][] board, char player) {
        // Checking rows, columns, and diagonals for a win.
        for (int i = 0; i < 3; i++) {
            if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
                    (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
                return true;
            }
        }
        return (board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
                (board[0][2] == player && board[1][1] == player && board[2][0] == player);
    }


    public static void displayBoard(char[][] board) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j]);
                if (j < 2) {
                    System.out.print(" | ");
                }
            }
            System.out.println();
            if (i < 2) {
                System.out.println("---------");
            }
        }
    }


    //Using boardFull function when the game is draw!
    public static boolean boardFull(char[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board.length; j++) {
                if (board[i][j] == ' ') {
                    return false;
                }
            }
        }
        return true;
    }
}
